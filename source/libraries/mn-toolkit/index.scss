$themeDefaultSpacing: 16px;
$themeDefaultItemHeight: 32px;
$themeDefaultBorderRadius: 6px;
$themeDefaultFontSize: 16px;
$themeMaxContentWidth: 750px;
$themeMaxListWidth: 749px;
$fieldBorderSize: 1px;

$primary: #fabd2f;
$secondary: #563d7c;
$tertiary: #f88379;
$positive: #28a745;
$negative: #dc3545;
$neutral: #1e90ff;
$warning: #ffca2c;
$info: #17a2b8;

$theme-dark-bg: (#181818 #414141 #555555 #9d9d9d) !default;
$theme-dark-fg: (#e9e9e9 #b8b8b8 #696969 #707070) !default;
$theme-light-bg: (#ffffff #f6f8f9 #eef0f2 #e5e9eb) !default;
$theme-light-fg: (#474747 #8a8a8a #9e9e9e #e4e4e4) !default;

@mixin bg($index: 1) {
  background-color: nth($theme-light-bg, $index);
  .mn-dark-theme & {
    background-color: nth($theme-dark-bg, $index);
  }
}

@mixin fgAsBg($index: 1) {
  background-color: nth($theme-light-fg, $index);
  .mn-dark-theme & {
    background-color: nth($theme-dark-fg, $index);
  }
}

@mixin bgAsFg($index: 1) {
  color: nth($theme-light-bg, $index);
  .mn-dark-theme & {
    color: nth($theme-dark-bg, $index);
  }
}

@mixin fill($index: 1) {
  fill: nth($theme-light-fg, $index);
  .mn-dark-theme & {
    fill: nth($theme-dark-fg, $index);
  }
}

@mixin fg($index: 1) {
  color: nth($theme-light-fg, $index);
  .mn-dark-theme & {
    color: nth($theme-dark-fg, $index);
  }
}

@mixin strokeFg($index: 1) {
  stroke: nth($theme-light-fg, $index);
  .mn-dark-theme & {
    stroke: nth($theme-dark-fg, $index);
  }
}

@mixin strokeBg($index: 1) {
  stroke: nth($theme-light-bg, $index);
  .mn-dark-theme & {
    stroke: nth($theme-dark-bg, $index);
  }
}

@mixin caret-color($index: 1) {
  caret-color: nth($theme-light-fg, $index);
  .mn-dark-theme & {
    caret-color: nth($theme-dark-fg, $index);
  }
}
@mixin border-color($index: 1) {
  border-color: nth($theme-light-fg, $index);
  .mn-dark-theme & {
    border-color: nth($theme-dark-fg, $index);
  }
}

@mixin shadow($index: 3) {
  @if ($index==0) {
    border: 1px solid;
    @include border-color(4);
    box-shadow: none;
  }
  @if ($index==1) {
    box-shadow:
      0px 0px 1px rgba(26, 32, 36, 0.32),
      0px 1px 2px rgba(91, 104, 113, 0.32);
  }
  @if ($index==2) {
    box-shadow:
      0px 0px 1px rgba(26, 32, 36, 0.32),
      0px 4px 8px rgba(91, 104, 113, 0.24);
  }
  @if ($index==3) {
    box-shadow:
      0px 0px 1px rgba(26, 32, 36, 0.32),
      0px 8px 16px rgba(91, 104, 113, 0.24);
  }
  @if ($index==4) {
    box-shadow:
      0px 0px 1px rgba(26, 32, 36, 0.32),
      0px 12px 24px rgba(91, 104, 113, 0.24);
  }
  @if ($index==5) {
    box-shadow:
      0px 0px 1px rgba(26, 32, 36, 0.32),
      0px 24px 32px rgba(91, 104, 113, 0.24);
  }
  @if ($index==6) {
    box-shadow:
      0px 0px 1px rgba(26, 32, 36, 0.32),
      0px 40px 64px rgba(91, 104, 113, 0.24);
  }
  .mn-dark-theme & {
    box-shadow: none;
    border: 1px solid;
    @include border-color(2);
  }
}

$theme-default-font-name: Tahoma, Helvetica, sans-serif !default;

$theme-small-ratio: 0.7;

$z-index-content: 0;
$z-index-title-bar: 1;
$z-index-view: 1;
$z-index-notifications: 2;
$z-index-view-below: 2;
$z-index-view-above: 3;
$z-index-overlay: 6;
$z-index-drawer: 7;
$z-index-popup: 7;
$z-index-popover: 8;
$z-index-toaster: 9;
$z-index-overall: 100;

.mn-color-primary {
  color: $primary;
}
.mn-color-secondary {
  color: $secondary;
}
.mn-color-tertiary {
  color: $tertiary;
}
.mn-color-positive {
  color: $positive;
}
.mn-color-negative {
  color: $negative;
}
.mn-color-neutral {
  color: $neutral;
}
.mn-color-warning {
  color: $warning;
}
.mn-color-info {
  color: $info;
}
.mn-color-1 {
  @include fg(1);
}
.mn-color-2 {
  @include fg(2);
}
.mn-color-3 {
  @include fg(3);
}
.mn-color-4 {
  @include fg(4);
}

.mn-bg-primary {
  background-color: $primary;
}
.mn-bg-secondary {
  background-color: $secondary;
}
.mn-bg-tertiary {
  background-color: $tertiary;
}
.mn-bg-positive {
  background-color: $positive;
}
.mn-bg-negative {
  background-color: $negative;
}
.mn-bg-neutral {
  background-color: $neutral;
}
.mn-bg-warning {
  background-color: $warning;
}
.mn-bg-info {
  background-color: $info;
}
.mn-bg-1 {
  @include bg(1);
}
.mn-bg-2 {
  @include bg(2);
}
.mn-bg-3 {
  @include bg(3);
}
.mn-bg-4 {
  @include bg(4);
}

.mn-zindex-content {
  z-index: $z-index-content;
}
.mn-zindex-view {
  z-index: $z-index-view;
}
.mn-zindex-notifications {
  z-index: $z-index-notifications;
}
.mn-zindex-view-below {
  z-index: $z-index-view-below;
}
.mn-zindex-view-above {
  z-index: $z-index-view-above;
}
.mn-zindex-drawer {
  z-index: $z-index-drawer;
}
.mn-zindex-overlay {
  z-index: $z-index-overlay;
}
.mn-zindex-popup {
  z-index: $z-index-popup;
}
.mn-zindex-popover {
  z-index: $z-index-popover;
}
.mn-zindex-toaster {
  z-index: $z-index-toaster;
}
.mn-zindex-overall {
  z-index: $z-index-overall;
}

@mixin text-overflow() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  line-height: 130%;
}

@mixin mnLayoutContainable() {
  display: flex;
  position: relative;

  $float-margin: 5px;

  &.mn-float-left {
    position: absolute !important;
    left: $float-margin;
  }

  &.mn-float-right {
    position: absolute !important;
    right: $float-margin;
  }

  &.mn-float-top-left {
    position: absolute !important;
    left: $float-margin;
    top: $float-margin;
  }

  &.mn-float-top-right {
    position: absolute !important;
    right: $float-margin;
    top: $float-margin;
  }

  &.mn-float-bottom-right {
    position: absolute !important;
    right: $float-margin;
    bottom: $float-margin;
  }

  &.mn-float-bottom-left {
    position: absolute !important;
    left: $float-margin;
    bottom: $float-margin;
  }

  &.mn-float-middle-right {
    position: absolute !important;
    right: $float-margin;
    top: 50%;
  }

  &.mn-float-middle-left {
    position: absolute !important;
    left: $float-margin;
    top: 50%;
  }
}

.mn-fill {
  flex: 1;
  overflow: hidden;
}

.has-click {
  cursor: pointer;
}

@mixin mnLayoutHorizontalStack {
  flex-direction: row;
}

@mixin mnLayoutVerticalStack {
  flex-direction: column;
}

@mixin fill-all($left: 0, $right: 0, $top: 0, $bottom: 0, $width: 0, $height: 0) {
  display: block;
  position: absolute;
  left: $left;
  top: $top;
  @if ($height != 0) {
    height: $height;
  } @else {
    bottom: $bottom;
  }
  @if ($width != 0) {
    width: $width;
  } @else {
    right: $right;
  }
}

@mixin set-height($height) {
  height: $height;
  line-height: $height;
}

@mixin triangle($direction, $opposite, $color: currentcolor, $width: 20px, $height: 20px) {
  width: 0;
  height: 0;
  content: '';
  position: absolute;

  z-index: 2;
  border-#{$opposite}: $height solid $color;

  $perpendicular-borders: calc($width/2) solid transparent;

  @if $direction == top or $direction == bottom {
    border-left: $perpendicular-borders;
    border-right: $perpendicular-borders;
  } @else if $direction == right or $direction == left {
    border-bottom: $perpendicular-borders;
    border-top: $perpendicular-borders;
  }
}

@function black($opacity: 0.8) {
  @return rgba(black, $opacity);
}

@function white($opacity: 0.8) {
  @return rgba(white, $opacity);
}

@mixin touch-zone($size) {
  &:after {
    content: '';
    position: absolute;
    left: -32px + $size;
    right: -32px + $size;
    top: -32px + $size;
    bottom: -32px + $size;
  }
}

@mixin user-selectable {
  user-select: text;
}

@mixin fx($property...) {
  $delay: 0.2s;
  $ease: ease;
  will-change: #{$property};
  transition: #{$property} $delay $ease;
}

@mixin ios-top($prop, $adding: 0) {
  @include on(ios) {
    @if ($adding == 0) {
      #{$prop}: constant(safe-area-inset-top);
      #{$prop}: env(safe-area-inset-top);
    } @else {
      #{$prop}: calc(constant(safe-area-inset-top) + #{$adding});
      #{$prop}: calc(env(safe-area-inset-top) + #{$adding});
    }
  }
}

@mixin text-overflow() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  line-height: 130%;
}

@mixin on($media) {
  @if $media == ios {
    .mn-platform-ios.mn-platform-mobile:not(.fullscreen) & {
      @content;
    }
  } @else if $media == android {
    .mn-platform-android.mn-platform-mobile:not(.fullscreen) & {
      @content;
    }
  } @else if $media == small {
    .mn-screen-small & {
      @content;
    }
  } @else if $media == medium {
    .mn-screen-medium & {
      @content;
    }
  } @else if $media == large {
    .mn-screen-large & {
      @content;
    }
  } @else if $media == xlarge {
    .mn-screen-xlarge & {
      @content;
    }
  } @else if $media == xxlarge {
    .mn-screen-xxlarge & {
      @content;
    }
  } @else if $media == small-min {
    .mn-screen-small-min & {
      @content;
    }
  } @else if $media == medium-min {
    .mn-screen-medium-min & {
      @content;
    }
  } @else if $media == large-min {
    .mn-screen-large-min & {
      @content;
    }
  } @else if $media == xlarge-min {
    .mn-screen-xlarge-min & {
      @content;
    }
  } @else if $media == xxlarge-min {
    .mn-screen-xxlarge-min & {
      @content;
    }
  } @else {
    @error "Unknown media '"+$media+"'";
  }
}

@import './containable/styles.scss';
@import './container/styles.scss';
@import './form/styles.scss';
@import './pane/styles.scss';
@import './menu/styles.scss';
@import './router/styles.scss';
@import './view/styles.scss';
@import './button/styles.scss';
@import './checkbox/styles.scss';
@import './fileUploader/styles.scss';
@import './fileInput/styles.scss';
@import './icon/styles.scss';
@import './splitPane/styles.scss';
@import './image/styles.scss';
@import './inplaceEdit/styles.scss';
@import './numberInput/styles.scss';
@import './popover/styles.scss';
@import './popup/styles.scss';
@import './progress/styles.scss';
@import './sortable/styles.scss';
@import './select/styles.scss';
@import './spacer/styles.scss';
@import './spinner/styles.scss';
@import './table/styles.scss';
@import './tabs/styles.scss';
@import './textAreaInput/styles.scss';
@import './textInput/styles.scss';
@import './typography/styles.scss';
@import './overlay/styles.scss';
@import './drawer/styles.scss';
@import './pager/styles.scss';
@import './memberBadge/styles.scss';
@import './toaster/styles.scss';
@import './toggle/styles.scss';
@import './richText/styles.scss';
@import './picture/styles.scss';
@import './colorPicker/styles.scss';
@import './gallery/styles.scss';
@import './slider/styles.scss';
@import './toolbar/styles.scss';
@import './searchBar/styles.scss';

@mixin resetBlockTag {
  margin: 0;
  padding: 0;
  border: 0 none;
  font-style: inherit;
  font-variant: inherit;
  font-weight: inherit;
  font-size: inherit;
  font-size-adjust: inherit;
  font-stretch: inherit;
  -moz-font-feature-settings: inherit;
  -moz-font-language-override: inherit;
  vertical-align: baseline;
  line-height: 100%;
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
}

@mixin resetElements {
  applet,
  object,
  iframe,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  blockquote,
  pre,
  a,
  abbr,
  acronym,
  address,
  big,
  cite,
  code,
  del,
  dfn,
  em,
  img,
  ins,
  kbd,
  q,
  s,
  samp,
  small,
  strike,
  strong,
  sub,
  sup,
  tt,
  var,
  b,
  u,
  i,
  center,
  dl,
  dt,
  dd,
  ol,
  ul,
  li,
  fieldset,
  form,
  label,
  legend,
  table,
  caption,
  tbody,
  tfoot,
  thead,
  tr,
  th,
  td,
  article,
  aside,
  canvas,
  details,
  embed,
  figure,
  figcaption,
  footer,
  header,
  hgroup,
  menu,
  nav,
  output,
  ruby,
  section,
  summary,
  time,
  mark,
  audio,
  video,
  ul,
  li {
    @include resetBlockTag;
    flex-shrink: 0;
  }

  article,
  aside,
  details,
  figcaption,
  figure,
  footer,
  header,
  hgroup,
  menu,
  nav,
  section {
    display: block;
  }

  audio,
  canvas,
  video {
    display: inline-block;
  }

  h1 {
    @include themeTypographyH1();
  }
  h2 {
    @include themeTypographyH2();
  }
  h3 {
    @include themeTypographyH3();
  }
  h4 {
    @include themeTypographyH4();
  }
  h5 {
    @include themeTypographyH5();
  }
  h6 {
    @include themeTypographyH6();
  }
  ol {
    @include themeTypographyOL();
  }
  ul {
    @include themeTypographyUL();
  }

  blockquote,
  q {
    @include themeTypographyBlockquote();
  }

  table {
    border-collapse: collapse;
    border-spacing: 0;
    width: 100%;
  }

  a {
    text-decoration: none;
    @include fg(1);
  }

  .emoji {
    width: 1em;
    height: 1em;
    display: inline;
    position: relative;
    top: 0.2em;
  }

  * {
    outline: none;
  }

  .element-invisible {
    display: none !important;
  }

  :focus {
    outline: 0;
  }

  a,
  [ng-click] {
    &:hover {
      cursor: pointer;
    }
  }

  p {
    @include themeTypographyParagraph;
  }

  *,
  *:before,
  *:after {
    box-sizing: border-box;
  }

  input,
  textarea {
    @include themeTypographyText;
  }
}

@mixin resetHtml {
  html {
    @include resetBlockTag;
    touch-action: pan-y;
    overflow: hidden;
    @include fgAsBg(1);
  }

  body {
    @include resetBlockTag;

    -webkit-touch-callout: none;
    font-smooth: always;
    text-size-adjust: none;
    -webkit-tap-highlight-color: transparent;
    user-select: none;
    margin: 0;
    padding: 0;
    word-wrap: break-word;
    text-rendering: optimizeLegibility;
    backface-visibility: hidden;
    -webkit-user-drag: none;
    -ms-content-zooming: none;
    touch-action: none;

    @include themeTypographyText;
    @include themeTypographyEnrichment();

    @include fill-all;
    display: flex;
    flex-direction: column;

    background-color: nth($theme-light-bg, 1);
    &.mn-dark-theme {
      background-color: nth($theme-dark-bg, 1);
    }

    color: nth($theme-light-fg, 1);
    &.mn-dark-theme {
      color: nth($theme-dark-fg, 1);
    }
  }

  #root {
    height: 100%;
    width: 100%;
    display: flex;
  }
}

@mixin reset {
  @include resetHtml;
  @include resetElements;
}

@include reset;
