@keyframes mn-popover-appear {
  0% {
    opacity: 0;
    transform: scale(0);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@mixin popoverTriangle($triangle-width, $triangle-height, $color, $border-color, $border-width) {
  &.bottom-center {
    &:before {
      @include triangle('top', 'bottom', $border-color, $triangle-width, $triangle-height);
      top: -$triangle-height;
      left: 50%;
      margin-left: calc(-1 * $triangle-width / 2);
    }
    &:after {
      @include triangle('top', 'bottom', $color, $triangle-width - 2 * $border-width, $triangle-height - $border-width);
      top: -$triangle-height + 2 * $border-width;
      left: 50%;
      margin-left: calc(-1 * $triangle-width / 2) + $border-width;
    }
  }

  &.top-center {
    &:before {
      @include triangle('bottom', 'top', $border-color, $triangle-width, $triangle-height);
      bottom: -$triangle-height;
      left: 50%;
      margin-left: calc(-1 * $triangle-width / 2);
    }
    &:after {
      @include triangle('bottom', 'top', $color, $triangle-width - 2 * $border-width, $triangle-height - $border-width);
      bottom: -$triangle-height + 2 * $border-width;
      left: 50%;
      margin-left: calc(-1 * $triangle-width / 2) + $border-width;
    }
  }

  &.bottom-left {
    &:before {
      @include triangle('top', 'bottom', $border-color, $triangle-width, $triangle-height);
      top: -$triangle-height;
      left: 10%;
      margin-left: calc(-1 * $triangle-width / 2);
    }
    &:after {
      @include triangle('top', 'bottom', $color, $triangle-width - 2 * $border-width, $triangle-height - $border-width);
      top: -$triangle-height + 2 * $border-width;
      left: 10%;
      margin-left: calc(-1 * $triangle-width / 2) + $border-width;
    }
  }

  &.bottom-right {
    &:before {
      @include triangle('top', 'bottom', $border-color, $triangle-width, $triangle-height);
      top: -$triangle-height;
      right: 10%;
      margin-right: calc(-1 * $triangle-width / 2);
    }
    &:after {
      @include triangle('top', 'bottom', $color, $triangle-width - 2 * $border-width, $triangle-height - $border-width);
      top: -$triangle-height + 2 * $border-width;
      right: 10%;
      margin-right: calc(-1 * $triangle-width / 2) + $border-width;
    }
  }

  &.top-left {
    &:before {
      @include triangle('bottom', 'top', $border-color, $triangle-width, $triangle-height);
      bottom: -$triangle-height;
      left: 10%;
      margin-left: calc(-1 * $triangle-width / 2);
    }
    &:after {
      @include triangle('bottom', 'top', $color, $triangle-width - 2 * $border-width, $triangle-height - $border-width);
      bottom: -$triangle-height + 2 * $border-width;
      left: 10%;
      margin-left: calc(-1 * $triangle-width / 2) + $border-width;
    }
  }

  &.top-right {
    &:before {
      @include triangle('bottom', 'top', $border-color, $triangle-width, $triangle-height);
      bottom: -$triangle-height;
      right: 10%;
      margin-right: calc(-1 * $triangle-width / 2);
    }
    &:after {
      @include triangle('bottom', 'top', $color, $triangle-width - 2 * $border-width, $triangle-height - $border-width);
      bottom: -$triangle-height + 2 * $border-width;
      right: 10%;
      margin-right: calc(-1 * $triangle-width / 2) + $border-width;
    }
  }
}

@mixin themePopovers() {
  @include fill-all();
  pointer-events: none;
  transition: background-color 0.1s ease;
  z-index: $z-index-popover;
  display: flex;
  align-items: center;
  justify-content: center;

  .mn-popover-overlay {
    pointer-events: auto;
    z-index: $z-index-popover-overlay;
    position: fixed;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;
  }

  .mn-popover-focus {
    position: fixed;
    box-shadow: 0 0 0 10000px hsl(0deg 0% 0% / 0.5);
    border-radius: calc(#{$defaultBorderRadius});
    z-index: $z-index-popover-overlay;
  }

  .mn-popover {
    position: absolute !important;
    pointer-events: auto;
    border-radius: calc(#{$defaultBorderRadius});
    background-color: color-hsl($bg1);
    box-shadow: color-hsla($fg1, 0.2) 0px 1px 0.25rem 0px;

    visibility: hidden;
    &.visible {
      visibility: visible;
      animation-name: mn-popover-appear;
      animation-duration: 240ms;
      animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      animation-fill-mode: both;
      transform-origin: top left;

      &.top-left {
        transform-origin: bottom left;
      }
      &.top-center {
        transform-origin: bottom center;
      }
      &.top-right {
        transform-origin: bottom right;
      }
      &.bottom-left {
        transform-origin: top left;
      }
      &.bottom-center {
        transform-origin: top center;
      }
      &.bottom-right {
        transform-origin: top right;
      }
    }

    &.actions {
      > .mn-container-inside {
        padding-right: 0px;
      }

      .popover-content-wrapper {
        &.mn-scroll {
          > .mn-container-inside {
            padding-right: 0px;
          }
        }
      }

      .mn-popover-actions-container {
        > .mn-container-inside {
          > ul {
            display: flex;
            flex-direction: column;
            margin: 0;
            list-style: none;

            // Reset li style
            li.action {
              line-height: 100%;
              margin-top: 0;
            }

            .action {
              $actionSidePadding: calc(#{$defaultSpacing} / 2);
              padding: 0 $actionSidePadding;

              height: calc(#{$defaultItemHeight});
              min-height: calc(#{$defaultItemHeight});
              max-height: calc(#{$defaultItemHeight});

              display: flex;
              flex-direction: row;
              align-items: center;
              gap: calc(0.5 * #{$defaultSpacing});

              // Simulate gap but without actual space (for hrefs)
              > .mn-container-inside {
                > *:not(:first-child) {
                  padding-left: calc(#{$defaultSpacing});
                }
              }

              // Override the anchor-specific color
              .mn-typography.mn-typography-anchor {
                color: color-hsl($fg1);

                &:hover {
                  color: color-hsl($fg1);
                }
              }

              &:first-child {
                border-radius: calc(#{$defaultBorderRadius}) calc(#{$defaultBorderRadius}) 0 0;
              }

              &:last-child {
                border-radius: 0 0 calc(#{$defaultBorderRadius}) calc(#{$defaultBorderRadius});
              }

              &:only-child {
                border-radius: calc(#{$defaultBorderRadius});
              }

              &.separator {
                $separatorHeight: 1px;
                height: $separatorHeight;
                min-height: $separatorHeight;
                max-height: $separatorHeight;

                $separatorWidth: calc(100% - #{$actionSidePadding});
                width: $separatorWidth;
                min-width: $separatorWidth;
                max-width: $separatorWidth;

                background-color: color-hsla($fg1, 0.3);
              }

              &:not(.mn-disabled):not(.separator) {
                &:hover {
                  background-color: color-hsl($bg2);
                }
              }

              &.selected {
                background-color: color-hsl($bg2);
              }

              &.sub-title {
                padding-left: calc(#{$defaultSpacing} * 2);
              }
            }
          }
        }
      }
    }

    &.bubble {
      @include popoverTriangle(25px, 15px, $bg1, hsla($fg1, 0.1), 1px);
    }

    &.walkthrough {
      @include popoverTriangle(25px, 15px, $info, transparent, 0px);

      background-color: color-hsl($info);
      color: color-hsl($dark-fg1);

      .mn-typography {
        color: color-hsl($dark-fg1);
      }

      .mn-button-link {
        color: color-hsl($dark-fg1) !important;
        font-weight: bold;
      }
    }
  }
}

.mn-popovers {
  @include themePopovers();
}
