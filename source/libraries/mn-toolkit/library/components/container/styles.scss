$scrollBarSize: 5px;

@mixin themeScrollBar() {
  .with-webkit & {
    &::-webkit-scrollbar {
      width: $scrollBarSize;
      height: $scrollBarSize;
      background-color: transparent;
    }

    &::-webkit-scrollbar-track {
      background-color: transparent;
    }

    &::-webkit-scrollbar-thumb {
      background-color: hsl(0deg 0% 0% / 0.1);
      border-radius: 3px;
    }

    &::-webkit-scrollbar-thumb:hover {
      background-color: hsl(0deg 0% 0% / 0.3);
    }
  }

  .without-webkit & {
    scrollbar-width: thin;
    scrollbar-color: hsl(0deg 0% 0% / 0.1) transparent;
  }
}

// On mobile, the scroll bar doesn't take up space, so the adjustments are different
.mn-platform-web,
.mn-platform-desktop {
  --container-scroll-padding-right: 0px;
  --container-scroll-inside-width-margin: calc(#{$smallSpacing});
  --container-scroll-x-padding-bottom: 0px;
  --container-scroll-x-inside-height-margin: calc(#{$smallSpacing});
}

.mn-platform-mobile {
  --container-scroll-padding-right: calc(#{$defaultSpacing});
  --container-scroll-inside-width-margin: 0px;
  --container-scroll-x-padding-bottom: calc(#{$defaultSpacing});
  --container-scroll-x-inside-height-margin: 0px;
}

$container-scroll-padding-right: var(--container-scroll-padding-right);
$container-scroll-inside-width-margin: var(--container-scroll-inside-width-margin);
$container-scroll-x-padding-bottom: var(--container-scroll-x-padding-bottom);
$container-scroll-x-inside-height-margin: var(--container-scroll-x-inside-height-margin);

// ----------------------- Container ------------------------

@mixin themeContainerInside() {
  display: flex;
  position: relative;
  width: 100%;
  min-width: 100%;
  max-width: 100%;
  height: 100%;
  min-height: 100%;
  max-height: 100%;
}

.mn-container-inside {
  @include themeContainerInside();
}

@mixin themeContainer() {
  &.mn-layout-gutter-x {
    &.mn-layout-gutter-x-tiny {
      > .mn-container-inside {
        column-gap: calc(#{$tinySpacing});
      }
    }
    &.mn-layout-gutter-x-small {
      > .mn-container-inside {
        column-gap: calc(#{$smallSpacing});
      }
    }
    &.mn-layout-gutter-x-default {
      > .mn-container-inside {
        column-gap: calc(#{$defaultSpacing});
      }
    }
    &.mn-layout-gutter-x-large {
      > .mn-container-inside {
        column-gap: calc(#{$largeSpacing});
      }
    }
    &.mn-layout-gutter-x-huge {
      > .mn-container-inside {
        column-gap: calc(#{$hugeSpacing});
      }
    }
  }

  &.mn-layout-gutter-y {
    &.mn-layout-gutter-y-tiny {
      > .mn-container-inside {
        row-gap: calc(#{$tinySpacing});
      }
    }
    &.mn-layout-gutter-y-small {
      > .mn-container-inside {
        row-gap: calc(#{$smallSpacing});
      }
    }
    &.mn-layout-gutter-y-default {
      > .mn-container-inside {
        row-gap: calc(#{$defaultSpacing});
      }
    }
    &.mn-layout-gutter-y-large {
      > .mn-container-inside {
        row-gap: calc(#{$largeSpacing});
      }
    }
    &.mn-layout-gutter-y-huge {
      > .mn-container-inside {
        row-gap: calc(#{$hugeSpacing});
      }
    }
  }

  &.mn-layout-gutter {
    &.mn-layout-gutter-tiny {
      > .mn-container-inside {
        gap: calc(#{$tinySpacing});
      }
    }
    &.mn-layout-gutter-small {
      > .mn-container-inside {
        gap: calc(#{$smallSpacing});
      }
    }
    &.mn-layout-gutter-default {
      > .mn-container-inside {
        gap: calc(#{$defaultSpacing});
      }
    }
    &.mn-layout-gutter-large {
      > .mn-container-inside {
        gap: calc(#{$largeSpacing});
      }
    }
    &.mn-layout-gutter-huge {
      > .mn-container-inside {
        gap: calc(#{$hugeSpacing});
      }
    }
  }

  &.mn-layout-wrap {
    > .mn-container-inside {
      flex-wrap: wrap;
      align-items: center;
    }
  }

  &.mn-layout-item-valign-top {
    > .mn-container-inside {
      align-items: flex-start;
      justify-content: initial;
    }
  }

  &.mn-layout-item-valign-middle {
    > .mn-container-inside {
      align-items: center;
      justify-content: initial;
    }
  }

  &.mn-layout-item-valign-bottom {
    > .mn-container-inside {
      align-items: flex-end;
      justify-content: initial;
    }
  }

  &.mn-layout-item-align-left {
    > .mn-container-inside {
      justify-content: flex-start;
    }
  }

  &.mn-layout-item-align-center {
    > .mn-container-inside {
      justify-content: center;
    }
  }

  &.mn-layout-item-align-right {
    > .mn-container-inside {
      justify-content: flex-end;
    }
  }

  &.mn-layout-horizontal-stack {
    > .mn-container-inside {
      flex-direction: row;
    }
  }

  &.mn-layout-vertical-stack {
    > .mn-container-inside {
      flex-direction: column;
    }

    &.mn-layout-item-align-left {
      > .mn-container-inside {
        align-items: flex-start;
        justify-content: initial;
      }
    }

    &.mn-layout-item-align-center {
      > .mn-container-inside {
        align-items: center;
        justify-content: initial;
      }
    }

    &.mn-layout-item-align-right {
      > .mn-container-inside {
        align-items: flex-end;
        justify-content: initial;
      }
    }

    &.mn-layout-item-valign-top {
      > .mn-container-inside {
        justify-content: flex-start;
      }
    }

    &.mn-layout-item-valign-middle {
      > .mn-container-inside {
        justify-content: center;
      }
    }

    &.mn-layout-item-valign-bottom {
      > .mn-container-inside {
        justify-content: flex-end;
      }
    }
  }

  $scrollBarSpace: calc(#{$smallSpacing});

  &.mn-scroll {
    overflow-y: auto;
    @include themeScrollBar();

    > .mn-container-inside {
      padding-right: $scrollBarSize;

      .without-webkit & {
        padding-right: $scrollBarSpace;
      }
    }

    &.mn-layout-padding,
    &.mn-layout-padding-x {
      padding-right: calc($container-scroll-padding-right);

      > .mn-container-inside {
        padding-right: 0;
        width: calc(100% - #{$container-scroll-inside-width-margin});
        min-width: calc(100% - #{$container-scroll-inside-width-margin});
        max-width: calc(100% - #{$container-scroll-inside-width-margin});

        .without-webkit & {
          width: calc(100% - #{$defaultSpacing});
          min-width: calc(100% - #{$defaultSpacing});
          max-width: calc(100% - #{$defaultSpacing});
        }

        &:after {
          content: ' ';
          min-height: calc(#{$defaultSpacing});
        }
      }

      &.mn-layout-gutter {
        > .mn-container-inside {
          &:after {
            margin-top: calc(-1 * #{$defaultSpacing});
          }
        }
      }
    }
  }

  &.mn-scroll-x {
    overflow-x: auto;
    @include themeScrollBar();

    > .mn-container-inside {
      padding-bottom: $scrollBarSize;

      .without-webkit & {
        padding-bottom: $scrollBarSpace;
      }
    }

    &.mn-layout-padding,
    &.mn-layout-padding-y {
      padding-bottom: calc($container-scroll-x-padding-bottom);

      > .mn-container-inside {
        padding-bottom: 0;
        height: calc(100% - #{$container-scroll-x-inside-height-margin});
        min-height: calc(100% - #{$container-scroll-x-inside-height-margin});
        max-height: calc(100% - #{$container-scroll-x-inside-height-margin});

        .without-webkit & {
          height: calc(100% - #{$defaultSpacing});
          min-height: calc(100% - #{$defaultSpacing});
          max-height: calc(100% - #{$defaultSpacing});
        }

        &:after {
          content: ' ';
          min-width: calc(#{$defaultSpacing});
        }
      }

      &.mn-layout-gutter {
        > .mn-container-inside {
          &:after {
            margin-left: calc(-1 * #{$defaultSpacing});
          }
        }
      }
    }
  }
}

.mn-container {
  @include themeContainer();
}

// ----------------------------------------------------------

// ------------------------- Grid ---------------------------

@mixin themeGrid() {
  > .mn-container-inside {
    display: grid;
    grid-template-columns: repeat(var(--mn-grid-columns), 1fr);
    grid-template-rows: repeat(var(--mn-grid-rows), auto);

    > .mn-grid-item {
      grid-column: span var(--mn-grid-col-span);
      grid-row: span var(--mn-grid-row-span);
    }
  }
}

.mn-layout-grid-stack {
  @include themeGrid();
}

// ----------------------------------------------------------

// --------------------- Labeled Group ----------------------

@mixin themeLabeledGroup() {
  margin-top: calc(#{$defaultSpacing});
  border-radius: calc(#{$defaultBorderRadius});

  $borderOpacity: 0.3;
  border: 1px solid;
  border-color: color-hsla($fg1, $borderOpacity);

  .group-label-container {
    position: absolute;
    top: calc(-1 * #{$medium-size} - #{$smallSpacing});
    left: calc(#{$smallSpacing});
    max-width: 100%;

    // Set to 100% to make sure the top calc above is correct, as the text will be as high as $medium-size
    .mn-typography {
      line-height: 100%;
      padding-bottom: 5px; // Simulate line-height to see some characters entierly
    }
  }
}

.mn-labeled-group {
  @include themeLabeledGroup();
}

// ----------------------------------------------------------

// ------------------------ Masonry -------------------------

@mixin themeMasonry() {
  .mn-masonry-item {
    > * {
      width: 100%;
      min-width: 100%;
      max-width: 100%;
      height: 100%;
      min-height: 100%;
      max-height: 100%;
    }
  }
}

.mn-masonry {
  @include themeMasonry();
}

// ----------------------------------------------------------

// ------------------------ AnchorContainer -------------------------

@mixin themeAnchorContainer() {
  color: initial !important;
  &:hover {
    text-decoration: none;
  }
}

.mn-anchor-container {
  @include themeAnchorContainer();
}

// ----------------------------------------------------------

// ------------------------ Accordion -------------------------

@mixin themeAccordion() {
  > .mn-accordion-header {
    border: 1px solid color-hsl($fg4);
  }

  > .mn-accordion-content-wrapper {
    display: flex;
    overflow: hidden;
    border: 1px solid color-hsl($fg4);
  }

  &.header-top-position,
  &.header-bottom-position {
    flex-direction: column;
  }

  &.header-left-position,
  &.header-right-position {
    flex-direction: row;
  }

  &.header-top-position {
    > .mn-accordion-content-wrapper {
      border-top: none;
    }
  }

  &.header-bottom-position {
    > .mn-accordion-content-wrapper {
      border-bottom: none;
    }
  }

  &.header-left-position {
    > .mn-accordion-content-wrapper {
      border-left: none;
    }
  }

  &.header-right-position {
    > .mn-accordion-content-wrapper {
      border-right: none;
    }
  }
}

.mn-accordion {
  @include themeAccordion();
}
