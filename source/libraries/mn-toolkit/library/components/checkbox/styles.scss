@mixin themeCheckbox() {
  align-items: center;
  cursor: pointer;
  user-select: none;
  gap: calc(#{$smallSpacing});

  .toggle {
    position: relative;
    display: inline-block;
    width: 20px;
    height: 20px;
    text-align: center;
    border: 1px solid;
    border-color: color-hsl($fg2);
    background-color: color-hsl($bg3);
    border-radius: 4px;
    @include fx(background-color);
    background-repeat: no-repeat;
    background-position: center;

    .error & {
      border-color: color-hsl($negative);
    }

    stroke-width: 150%;
    font-weight: bold;

    path {
      color: black;
      fill: currentColor;
      stroke: currentColor;
      stroke-width: 0.5px;
      visibility: hidden;
    }
  }

  .label {
    @include text-overflow();
    line-height: 100%;
    height: 100%;
    min-height: 100%;
    max-height: 100%;
    align-content: center;
  }

  &.checked {
    .toggle {
      background-color: color-hsl($primary);
      border-color: color-hsl($primary);
      color: color-hsl($bg1);

      .error & {
        border-color: color-hsl($negative);
      }

      background-image: url('data:image/svg+xml;utf8,<svg width="12" height="9" viewBox="0 0 12 9" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11 0C10.72 0 10.47 0.11 10.29 0.29L4 6.59L1.71 4.29C1.53 4.11 1.28 4 1 4C0.45 4 0 4.45 0 5C0 5.28 0.11 5.53 0.29 5.71L3.29 8.71C3.47 8.89 3.72 9 4 9C4.28 9 4.53 8.89 4.71 8.71L11.71 1.71C11.89 1.53 12 1.28 12 1C12 0.45 11.55 0 11 0Z" fill="currentColor"/> </svg>');
    }
  }

  &.disabled {
    pointer-events: none;

    .label {
      color: color-hsl($fg3);
    }
  }
}

.mn-checkbox {
  @include themeCheckbox();
}

@mixin themeCheckboxField() {
  .input-wrapper {
    min-height: auto;
    max-height: inherit;
    height: auto;
    border: none !important;
    box-shadow: none;
    padding: 0;
    background-color: transparent;

    .mn-checkbox {
      .label {
        @include themeFont('regular');
        font-weight: bold;
      }
    }
  }
}

.mn-form-field.mn-field-checkbox {
  @include themeCheckboxField();
}

@mixin themeCheckboxTree() {
  flex-direction: column;
  gap: calc(#{$defaultSpacing});

  // Reset ul/li styles
  list-style: none;
  margin: 0;
  line-height: 100%;

  ul,
  li {
    line-height: 100%;
    list-style: none;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: calc(#{$defaultSpacing});
  }

  .checkbox-tree-item {
    &.has-children {
      > .mn-container-inside {
        > .mn-checkbox {
          .label {
            font-weight: bold;
          }
        }
      }
    }
  }
}

.mn-checkbox-tree {
  @include themeCheckboxTree();
}

@mixin themeCheckboxTreeField() {
  .input-wrapper {
    height: auto;
    min-height: auto;
    max-height: inherit;
    background-color: unset;
    border: none;
  }
}

.mn-form-field.mn-field-checkbox-tree {
  @include themeCheckboxTreeField();
}
