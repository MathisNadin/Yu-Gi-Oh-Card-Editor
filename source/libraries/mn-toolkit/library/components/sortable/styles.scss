@mixin themeSortable() {
  &.mn-layout-gutter {
    &.mn-layout-gutter-tiny {
      > .mn-container-inside {
        row-gap: 0;

        .mn-sortable-item {
          padding-top: calc(#{$tinySpacing} / 2);
          padding-bottom: calc(#{$tinySpacing} / 2);
        }
      }
    }
    &.mn-layout-gutter-small {
      > .mn-container-inside {
        row-gap: 0;

        .mn-sortable-item {
          padding-top: calc(#{$smallSpacing} / 2);
          padding-bottom: calc(#{$smallSpacing} / 2);
        }
      }
    }
    &.mn-layout-gutter-default {
      > .mn-container-inside {
        row-gap: 0;

        .mn-sortable-item {
          padding-top: calc(#{$defaultSpacing} / 2);
          padding-bottom: calc(#{$defaultSpacing} / 2);
        }
      }
    }
    &.mn-layout-gutter-large {
      > .mn-container-inside {
        row-gap: 0;

        .mn-sortable-item {
          padding-top: calc(#{$largeSpacing} / 2);
          padding-bottom: calc(#{$largeSpacing} / 2);
        }
      }
    }
    &.mn-layout-gutter-huge {
      > .mn-container-inside {
        row-gap: 0;

        .mn-sortable-item {
          padding-top: calc(#{$hugeSpacing} / 2);
          padding-bottom: calc(#{$hugeSpacing} / 2);
        }
      }
    }
  }

  .mn-sortable-item {
    display: flex;

    > .handler {
      width: 20px;
      max-width: 20px;
      align-self: center;
      text-align: center;
      cursor: grab;
      * {
        pointer-events: none;
      }
    }

    > * {
      flex: 1;
    }

    &[draggable='true'] {
      > * {
        pointer-events: none;
      }

      &:active {
        cursor: grabbing !important;
      }

      &.mn-drag-target {
        background: linear-gradient(to bottom, transparent calc(100% - 4px), color-hsl($warning) calc(100% - 4px));
      }

      &.mn-drag-target-above {
        background: linear-gradient(to top, transparent calc(100% - 4px), color-hsl($info) calc(100% - 4px));
      }
    }
  }
}

.mn-sortable {
  @include themeSortable();
}
