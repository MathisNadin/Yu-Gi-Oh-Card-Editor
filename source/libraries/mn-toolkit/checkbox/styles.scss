@mixin themeCheckbox() {
  @include mnLayoutContainable();
  display: flex !important;
  align-items: center;
  cursor: pointer;
  user-select: none;
  gap: calc($themeDefaultSpacing/2);

  .toggle {
    position: relative;
    display: inline-block;
    min-width: 20px;
    min-height: 20px;
    text-align: center;
    border: 1px solid;
    @include border-color(2);
    @include bg(3);
    border-radius: 4px;
    @include fx(background-color);
    background-repeat: no-repeat;
    background-position: center;
    .error & {
      border-color: $assertive;
    }
  }

  .label {
    @include text-overflow;
    display: block;
  }

  &.label-position-left {
    flex-direction: row-reverse;
  }

  &.checked {
    .toggle {
      background-color: $primary;
      border-color: $primary;
      color: nth($theme-light-bg, 1);
      .mn-dark-theme & {
        color: nth($theme-dark-bg, 1);
      }
      .error & {
        border-color: $assertive;
      }
      background-image: url('data:image/svg+xml;utf8,<svg width="12" height="9" viewBox="0 0 12 9" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M11 0C10.72 0 10.47 0.11 10.29 0.29L4 6.59L1.71 4.29C1.53 4.11 1.28 4 1 4C0.45 4 0 4.45 0 5C0 5.28 0.11 5.53 0.29 5.71L3.29 8.71C3.47 8.89 3.72 9 4 9C4.28 9 4.53 8.89 4.71 8.71L11.71 1.71C11.89 1.53 12 1.28 12 1C12 0.45 11.55 0 11 0Z" fill="currentColor"/> </svg>');
    }
  }

  &.disabled {
    pointer-events: none;

    .label {
      @include fg(3);
    }
  }
}

.mn-form-field.mn-field-CheckBox {
  .form-label .mn-typography {
    color: transparent;
  }
  .form-helper {
    margin-left: 44px;
  }
  .input-wrapper {
    border: none !important;
    box-shadow: none;
    background-color: transparent;
    .mn-dark-theme & {
      background-color: transparent;
    }
  }
}

.mn-checkbox {
  @include themeCheckbox();
}
