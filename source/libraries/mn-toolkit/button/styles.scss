$button-height: calc(#{$themeDefaultItemHeight});

@mixin colorizeButton($bgColor) {
  background-color: color-rgb($bgColor);
  border: 3px solid rgba($bgColor, 0);
  @include bgAsFg(1);

  .mn-icon {
    @include bgAsFg(1);
    @include fill(1);
  }

  &:hover,
  &:active {
    background-color: lighten-color($bgColor);
  }
}

button {
  font-size: 16px;
  font-size-adjust: inherit;
  padding: 0;
  background-color: transparent;
}

@mixin themeButton() {
  @include mnLayoutContainable();
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  border: none;
  width: fit-content;
  height: fit-content;

  cursor: pointer;
  text-decoration: none;
  user-select: none;
  text-shadow: none;
  background-image: none;
  position: relative;
  border-radius: calc(#{$themeDefaultBorderRadius});
  font-weight: 400;
  letter-spacing: 0.5px;
  transition: all 0.4s ease;

  .icon {
    $size: 30px;
    display: inline-block;
    width: $size;
    height: $size;
    line-height: $size;
  }

  &.mn-button-icon-and-text {
    &.mn-icon-position-left {
      padding-left: calc(#{$themeDefaultSpacing} / 2);
    }

    &.mn-icon-position-right {
      flex-direction: row-reverse;
      padding-right: calc(#{$themeDefaultSpacing} / 2);
    }
  }

  .label {
    @include text-overflow;
    display: block;
    flex: 1;
    line-height: 1em;
    text-align: center;
    padding: calc(#{$themeDefaultSpacing} / 4) calc(#{$themeDefaultSpacing} / 2);
  }

  &.mn-button-block {
    width: 100%;
    display: flex;
    text-align: center;
  }

  &.mn-color-primary {
    @include colorizeButton($primary);
  }
  &.mn-color-secondary {
    @include colorizeButton($secondary);
  }
  &.mn-color-tertiary {
    @include colorizeButton($tertiary);
  }
  &.mn-color-positive {
    @include colorizeButton($positive);
  }
  &.mn-color-negative {
    @include colorizeButton($negative);
  }
  &.mn-color-neutral {
    @include colorizeButton($neutral);
  }
  &.mn-color-warning {
    @include colorizeButton($warning);
  }
  &.mn-color-info {
    @include colorizeButton($info);
  }
  &.mn-color-1 {
    @include colorizeButton(nth($theme-light-fg, 1));
  }
  &.mn-color-2 {
    @include colorizeButton(nth($theme-light-fg, 2));
  }
  &.mn-color-3 {
    @include colorizeButton(nth($theme-light-fg, 3));
  }
  &.mn-color-4 {
    @include colorizeButton(nth($theme-light-fg, 4));
  }

  &.mn-disabled {
    opacity: 0.2;
    filter: grayscale(100%);
    pointer-events: none;
  }
}

.mn-button {
  @include themeButton;
}

@mixin colorizeButtonOutline($color) {
  transition: border-color 0.4s ease;
  border: 1px solid transparent;
  border-color: color-rgb($color);

  &:hover,
  &:active {
    background-color: color-rgb($color);
    @include bgAsFg(1);
  }

  .icon {
    color: $color;
  }
}

@mixin themeButtonOutline() {
  @include mnLayoutContainable();
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  justify-items: center;
  min-height: $button-height;
  max-height: $button-height;
  line-height: $button-height;
  width: fit-content;
  cursor: pointer;
  text-decoration: none;
  user-select: none;
  text-shadow: none;
  background-image: none;
  position: relative;
  padding: 0 calc(#{$themeDefaultSpacing});
  border-radius: calc(#{$themeDefaultBorderRadius});
  border-width: 2px;
  border-style: solid;
  @include fx(border-color, background-color);

  .label {
    flex: 1;
    @include text-overflow;
  }

  &:hover {
    text-decoration: none;
  }

  .icon {
    $size: 30px;
    display: inline-block;
    width: $size;
    height: $size;
    line-height: $size;
    margin-right: calc(#{$themeDefaultSpacing} / 2);
  }

  &.mn-color-primary {
    @include colorizeButtonOutline($primary);
  }
  &.mn-color-secondary {
    @include colorizeButtonOutline($secondary);
  }
  &.mn-color-tertiary {
    @include colorizeButtonOutline($tertiary);
  }
  &.mn-color-positive {
    @include colorizeButtonOutline($positive);
  }
  &.mn-color-negative {
    @include colorizeButtonOutline($negative);
  }
  &.mn-color-neutral {
    @include colorizeButtonOutline($neutral);
  }
  &.mn-color-warning {
    @include colorizeButtonOutline($warning);
  }
  &.mn-color-info {
    @include colorizeButtonOutline($info);
  }
  &.mn-color-1 {
    @include colorizeButtonOutline(nth($theme-light-fg, 1));
    .mn-dark-theme & {
      @include colorizeButtonOutline(nth($theme-dark-fg, 1));
    }
  }
  &.mn-color-2 {
    @include colorizeButtonOutline(nth($theme-light-fg, 2));
    .mn-dark-theme & {
      @include colorizeButtonOutline(nth($theme-dark-fg, 2));
    }
  }
  &.mn-color-3 {
    @include colorizeButtonOutline(nth($theme-light-fg, 3));
    .mn-dark-theme & {
      @include colorizeButtonOutline(nth($theme-dark-fg, 3));
    }
  }
  &.mn-color-4 {
    @include colorizeButtonOutline(nth($theme-light-fg, 4));
    .mn-dark-theme & {
      @include colorizeButtonOutline(nth($theme-dark-fg, 4));
    }
  }

  &.disabled,
  &.mn-disabled {
    color: black(0.3);
    border-color: black(0.1);
    pointer-events: none;
    .mn-dark-theme & {
      color: white(0.3);
      border-color: white(0.1);
    }
  }
}

.mn-button-outline {
  @include themeButtonOutline;
}

@mixin colorizeButtonLink($color) {
  background-color: rgba($color, 0);
  &:hover {
    text-decoration: none;
  }

  .icon {
    @include fill(1);
  }
}

@mixin themeButtonLink() {
  @include mnLayoutContainable();
  display: inline-flex;
  align-items: center;
  justify-content: right;
  border: none;
  @include text-overflow;
  min-height: $button-height;
  max-height: $button-height;
  line-height: $button-height;
  width: fit-content;
  cursor: pointer;
  user-select: none;
  text-align: center;
  text-shadow: none;
  background-image: none;
  font-weight: 300;
  position: relative;
  border-radius: calc(#{$themeDefaultBorderRadius});
  padding: 0 calc(#{$themeDefaultSpacing} / 2);

  .label {
    @include text-overflow;
  }

  .icon {
    $size: 30px;
    display: inline-block;
    width: $size;
    height: $size;
    line-height: $size;
    margin-right: calc(#{$themeDefaultSpacing} / 2);
  }

  &.mn-color-primary {
    @include colorizeButtonLink($primary);
  }
  &.mn-color-secondary {
    @include colorizeButtonLink($secondary);
  }
  &.mn-color-tertiary {
    @include colorizeButtonLink($tertiary);
  }
  &.mn-color-positive {
    @include colorizeButtonLink($positive);
  }
  &.mn-color-negative {
    @include colorizeButtonLink($negative);
  }
  &.mn-color-neutral {
    @include colorizeButtonLink($neutral);
  }
  &.mn-color-warning {
    @include colorizeButtonLink($warning);
  }
  &.mn-color-info {
    @include colorizeButtonLink($info);
  }
  &.mn-color-1 {
    @include colorizeButtonLink(nth($theme-light-fg, 1));
  }
  &.mn-color-2 {
    @include colorizeButtonLink(nth($theme-light-fg, 2));
  }
  &.mn-color-3 {
    @include colorizeButtonLink(nth($theme-light-fg, 3));
  }
  &.mn-color-4 {
    @include colorizeButtonLink(nth($theme-light-fg, 4));
  }

  &.mn-disabled {
    opacity: 0.3;
    filter: grayscale(1);
    pointer-events: none;
  }
}

.mn-button-link {
  @include themeButtonLink;
}

@mixin colorizeButtonIcon($color) {
  fill: color-rgb($color);
  border-color: color-rgb($color);

  &:hover {
    @include bgAsFg(1);
    background-color: color-rgb($color);
  }
}

@mixin buttonIconSize($size, $padding, $border) {
  min-height: $size;
  max-height: $size;
  min-width: $size;
  max-width: $size;
  padding: $padding;

  $iconSize: calc(#{$size} - #{$padding} * 2 - #{$border} * 2);
  font-size: $iconSize;
  line-height: $iconSize;

  svg {
    min-height: $iconSize;
    max-height: $iconSize;
    min-width: $iconSize;
    max-width: $iconSize;
    display: inline-block;
  }
}

@mixin themeButtonIcon {
  position: relative;
  cursor: pointer;
  user-select: none;
  border-radius: 99px;
  text-align: center;
  transition: color 0.4s ease;

  $border: 1px;
  border: $border solid color-rgb($primary);

  @include buttonIconSize(calc(#{$themeDefaultItemHeight}), calc(#{$themeDefaultSpacing} / 4), $border);

  &.mn-size-small {
    @include buttonIconSize(calc(#{$themeDefaultItemHeight} * 0.75), calc(#{$themeDefaultSpacing} / 4), $border);
  }

  &.mn-color-primary {
    @include colorizeButtonIcon($primary);
  }
  &.mn-color-secondary {
    @include colorizeButtonIcon($secondary);
  }
  &.mn-color-tertiary {
    @include colorizeButtonIcon($tertiary);
  }
  &.mn-color-positive {
    @include colorizeButtonIcon($positive);
  }
  &.mn-color-negative {
    @include colorizeButtonIcon($negative);
  }
  &.mn-color-neutral {
    @include colorizeButtonIcon($neutral);
  }
  &.mn-color-warning {
    @include colorizeButtonIcon($warning);
  }
  &.mn-color-info {
    @include colorizeButtonIcon($info);
  }
  &.mn-color-1 {
    @include colorizeButtonIcon(nth($theme-light-fg, 1));
    .mn-dark-theme & {
      @include colorizeButtonIcon(nth($theme-dark-fg, 1));
    }
  }
  &.mn-color-2 {
    @include colorizeButtonIcon(nth($theme-light-fg, 2));
    .mn-dark-theme & {
      @include colorizeButtonIcon(nth($theme-dark-fg, 2));
    }
  }
  &.mn-color-3 {
    @include colorizeButtonIcon(nth($theme-light-fg, 3));
    .mn-dark-theme & {
      @include colorizeButtonIcon(nth($theme-dark-fg, 3));
    }
  }
  &.mn-color-4 {
    @include colorizeButtonIcon(nth($theme-light-fg, 4));
    .mn-dark-theme & {
      @include colorizeButtonIcon(nth($theme-dark-fg, 4));
    }
  }

  &.mn-disabled {
    .icon {
      opacity: 0.3;
      filter: grayscale(1);
    }
    pointer-events: none;
  }
}

.mn-button-icon {
  @include themeButtonIcon;
}

.mn-ghost {
  z-index: $z-index-content + 1;
  will-change: opacity, transform !important;
  transform: translate3d(0, -10px, 0);
  opacity: 0;
  transition:
    opacity 0.4s ease,
    transform 0.4s ease !important;

  &.mn-button-icon {
    &.mn-size-xs {
      padding: 0 0px;
      width: 24px;
      top: 3px;
      right: 4px;
      border-radius: 10px;
    }
  }
}

*:hover,
*.mn-over {
  > .mn-ghost {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}
