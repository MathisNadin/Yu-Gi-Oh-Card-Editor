@mixin mnScrollBar() {
  .with-webkit & {
    &::-webkit-scrollbar {
      width: 5px;
      background-color: transparent;
    }

    &::-webkit-scrollbar-track {
      background-color: transparent;
    }

    &::-webkit-scrollbar-thumb {
      background-color: rgba(black, 0.1);
      border-radius: 3px;
    }

    &::-webkit-scrollbar-thumb:hover {
      background-color: rgba(black, 0.3);
    }
  }

  .without-webkit & {
    scrollbar-width: thin;
    scrollbar-color: rgba(black, 0.1) transparent;
  }
}

.mn-container-inside {
  display: flex;
  position: relative;
  width: 100%;
  min-width: 100%;
  max-width: 100%;
  height: 100%;
  min-height: 100%;
  max-height: 100%;
}

.mn-container {
  &.mn-layout-item-valign-top {
    > .mn-container-inside {
      align-items: flex-start;
      justify-content: initial;
    }
  }

  &.mn-layout-item-valign-middle {
    > .mn-container-inside {
      align-items: center;
      justify-content: initial;
    }
  }

  &.mn-layout-item-valign-bottom {
    > .mn-container-inside {
      align-items: flex-end;
      justify-content: initial;
    }
  }

  &.mn-layout-item-align-left {
    > .mn-container-inside {
      justify-content: flex-start;
    }
  }

  &.mn-layout-item-align-center {
    > .mn-container-inside {
      justify-content: center;
    }
  }

  &.mn-layout-item-align-right {
    > .mn-container-inside {
      justify-content: flex-end;
    }
  }

  &.mn-layout-horizontal-stack {
    > .mn-container-inside {
      flex-direction: row;
    }
  }

  &.mn-layout-vertical-stack {
    > .mn-container-inside {
      flex-direction: column;
    }

    &.mn-layout-item-align-left {
      > .mn-container-inside {
        align-items: flex-start;
        justify-content: initial;
      }
    }

    &.mn-layout-item-align-center {
      > .mn-container-inside {
        align-items: center;
        justify-content: initial;
      }
    }

    &.mn-layout-item-align-right {
      > .mn-container-inside {
        align-items: flex-end;
        justify-content: initial;
      }
    }

    &.mn-layout-item-valign-top {
      > .mn-container-inside {
        justify-content: flex-start;
      }
    }

    &.mn-layout-item-valign-middle {
      > .mn-container-inside {
        justify-content: center;
      }
    }

    &.mn-layout-item-valign-bottom {
      > .mn-container-inside {
        justify-content: flex-end;
      }
    }
  }

  &.mn-layout-wrap {
    > .mn-container-inside {
      flex-wrap: wrap;
      align-items: center;
    }
  }

  &.mn-layout-gutter {
    > .mn-container-inside {
      gap: $themeDefaultSpacing;
    }
  }

  &.mn-layout-margin-horizontal {
    margin: 0 $themeDefaultSpacing;
    /* > .mn-container-inside {
      margin: 0 $themeDefaultSpacing;
    } */
  }

  &.mn-layout-margin-vertical {
    margin: $themeDefaultSpacing 0;
    /* > .mn-container-inside {
      margin: $themeDefaultSpacing 0;
    } */
  }

  &.mn-layout-margin {
    margin: $themeDefaultSpacing;
    /* > .mn-container-inside {
      margin: $themeDefaultSpacing;
    } */
  }

  &.mn-layout-padding-horizontal {
    > .mn-container-inside {
      padding: 0 $themeDefaultSpacing;
    }
  }

  &.mn-layout-padding-vertical {
    > .mn-container-inside {
      padding: $themeDefaultSpacing 0;
    }
  }

  .mn-layout-padding {
    > .mn-container-inside {
      padding: $themeDefaultSpacing;
    }
  }

  $scrollBarSpace: calc($themeDefaultSpacing / 2);

  &.mn-scroll {
    overflow-y: auto;
    @include mnScrollBar();

    > .mn-container-inside {
      padding-right: $scrollBarSpace;

      > :last-child {
        margin-bottom: $themeDefaultSpacing;
      }
    }

    &.mn-layout-padding {
      > .mn-container-inside {
        padding-right: $themeDefaultSpacing + $scrollBarSpace;
        padding-bottom: 0;
      }
    }
  }

  &.mn-scrollX {
    overflow-x: auto;
    @include mnScrollBar();

    .mn-container-inside {
      padding-bottom: $scrollBarSpace;
    }

    &.mn-layout-padding {
      > .mn-container-inside {
        padding-bottom: $themeDefaultSpacing + $scrollBarSpace;
      }
    }
  }
}

$COLUMNS: (
  -1: percentage(calc(1 / 12)),
  -2: percentage(calc(2 / 12)),
  -3: percentage(calc(3 / 12)),
  -4: percentage(calc(4 / 12)),
  -5: percentage(calc(5 / 12)),
  -6: percentage(calc(6 / 12)),
  -7: percentage(calc(7 / 12)),
  -8: percentage(calc(8 / 12)),
  -9: percentage(calc(9 / 12)),
  -10: percentage(calc(10 / 12)),
  -11: percentage(calc(11 / 12)),
  -12: percentage(calc(12 / 12))
);

@mixin gridset($bp) {
  @each $colwidth, $width in $COLUMNS {
    .mn-containable-item-width#{$bp}#{$colwidth} {
      width: $width;
      flex-basis: $width;
    }

    &.mn-layout-gutter {
      .mn-containable-item-width#{$bp}#{$colwidth} {
        width: calc(#{$width} - #{$themeDefaultSpacing});
        flex-basis: calc(#{$width} - #{$themeDefaultSpacing});
      }
    }
  }
}

.mn-layout-grid-stack {
  > .mn-layout-gutter {
    gap: initial;
    margin-top: -$themeDefaultSpacing;
    margin-left: -$themeDefaultSpacing;

    > * {
      padding: $themeDefaultSpacing 0 0 $themeDefaultSpacing;

      > * {
        width: 100%;
      }
    }
  }

  > .mn-grid-item {
    display: flex;
  }

  @include gridset('-s');

  @include on(medium) {
    @include gridset('-m');
  }

  @include on(large) {
    @include gridset('-l');
  }

  @include on(xlarge) {
    @include gridset('-xl');
  }

  @include on(xxlarge) {
    @include gridset('-xxl');
  }
}

@mixin columnWidth($nbColumns) {
  width: calc((100% - (#{$nbColumns} -1) * (2 * 5px + 16px)) / #{$nbColumns}) !important;
}

@mixin frame($name) {
  border-radius: $themeDefaultBorderRadius;
  @if ($name== 'shadow-1') {
    @include shadow(0);
  }
  @if ($name== 'dashed') {
    border-style: dashed;
    border-width: 1px;
    @include border-color(3);
  }
}

.mn-frame-shadow-1 {
  @include frame('shadow-1');
}
.mn-frame-dashed {
  @include frame('dashed');
}

.mn-labeled-group {
  margin-top: $themeDefaultSpacing;
  border-radius: $themeDefaultBorderRadius;

  $borderOpacity: 0.3;
  border: 1px solid;
  border-color: black($borderOpacity);

  .mn-dark-theme & {
    border-color: white($borderOpacity);
  }

  .group-label-container {
    position: absolute;
    top: - calc($themeDefaultSpacing/2);
    left: calc($themeDefaultSpacing/2);
    padding: 0 $themeDefaultSpacing;
  }

  .labeled-group-content {
    margin-top: calc($themeDefaultSpacing/2);
  }
}
