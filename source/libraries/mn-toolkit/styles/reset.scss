@mixin resetBlockTag() {
  margin: 0;
  padding: 0;
  border: 0 none;
  font-style: inherit;
  font-variant: inherit;
  font-weight: inherit;
  font-size: inherit;
  font-size-adjust: inherit;
  font-stretch: inherit;
  -moz-font-feature-settings: inherit;
  -moz-font-language-override: inherit;
  vertical-align: baseline;
  line-height: 100%;
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
}

@mixin resetElements() {
  applet,
  object,
  iframe,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  blockquote,
  pre,
  a,
  abbr,
  acronym,
  address,
  big,
  cite,
  code,
  del,
  dfn,
  em,
  img,
  ins,
  kbd,
  q,
  s,
  samp,
  small,
  strike,
  strong,
  sub,
  sup,
  tt,
  var,
  b,
  u,
  i,
  center,
  dl,
  dt,
  dd,
  ol,
  ul,
  li,
  fieldset,
  form,
  label,
  legend,
  table,
  caption,
  tbody,
  tfoot,
  thead,
  tr,
  th,
  td,
  article,
  aside,
  canvas,
  details,
  embed,
  figure,
  figcaption,
  footer,
  header,
  hgroup,
  menu,
  nav,
  output,
  ruby,
  section,
  summary,
  time,
  mark,
  audio,
  video,
  ul,
  li {
    @include resetBlockTag();
    flex-shrink: 0;
  }

  article,
  aside,
  details,
  figcaption,
  figure,
  footer,
  header,
  hgroup,
  menu,
  nav,
  section {
    display: block;
  }

  audio,
  canvas,
  video {
    display: inline-block;
  }

  h1 {
    @include themeTypographyH1();
  }
  h2 {
    @include themeTypographyH2();
  }
  h3 {
    @include themeTypographyH3();
  }
  h4 {
    @include themeTypographyH4();
  }
  h5 {
    @include themeTypographyH5();
  }
  h6 {
    @include themeTypographyH6();
  }
  ol {
    @include themeTypographyOL();
  }
  ul {
    @include themeTypographyUL();
  }

  blockquote,
  q {
    @include themeTypographyBlockquote();
  }

  table {
    border-collapse: collapse;
    border-spacing: 0;
    width: 100%;
  }

  a {
    text-decoration: none;
    color: color-hsl($fg1);
  }

  .emoji {
    width: 1em;
    height: 1em;
    display: inline;
    position: relative;
    top: 0.2em;
  }

  * {
    outline: none;
  }

  .element-invisible {
    display: none !important;
  }

  :focus {
    outline: 0;
  }

  a,
  [ng-click] {
    &:hover {
      cursor: pointer;
    }
  }

  p {
    @include themeTypographyParagraph();
  }

  *,
  *:before,
  *:after {
    box-sizing: border-box;
  }

  input,
  textarea {
    @include themeTypographyText();
  }
}

@mixin resetHtml() {
  html {
    @include resetBlockTag();
    touch-action: pan-y;
    overflow: hidden;
    background-color: color-hsl($fg1);
  }

  body {
    @include resetBlockTag();

    -webkit-touch-callout: none;
    font-smooth: always;
    text-size-adjust: none;
    -webkit-tap-highlight-color: transparent;
    user-select: none;
    margin: 0;
    padding: 0;
    word-wrap: break-word;
    text-rendering: optimizeLegibility;
    backface-visibility: hidden;
    -webkit-user-drag: none;
    -ms-content-zooming: none;
    touch-action: none;

    @include themeTypographyText();
    @include themeTypographyEnrichment();

    @include fill-all();
    display: flex;
    flex-direction: column;

    background-color: color-hsl($bg1);
    color: color-hsl($fg1);
  }

  #root {
    height: 100%;
    width: 100%;
    display: flex;
  }
}

@mixin reset() {
  @include resetHtml();
  @include resetElements();
}
